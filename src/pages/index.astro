---
import Layout from "../layouts/Layout.astro";
import Wrapper from "../components/react/3dWrapper";

import InformationSection from "../components/InformationSection.astro";
import Whoareus from "../components/Whoareus.astro";
import ContactUs from "../components/ContactUs.astro";

interface Texts {
	titles: string[];
	bodies: string[];
}

const texts = {
	titles: [
		"Lorem ipsum dolor",
		"Lorem ipsum dolor",
	],
	bodies: [
		"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quis cupiditate dignissimos labore numquam debitis temporibus vel dolorem dicta praesentium, neque perferendis, ipsam quae? Animi corrupti quo vitae, id omnis ut.",
		"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quis cupiditate dignissimos labore numquam debitis temporibus vel dolorem dicta praesentium, neque perferendis, ipsam quae? Animi corrupti quo vitae, id omnis ut.",
	]
} as Texts;
---

<script>
	import { tsParticles } from "https://cdn.jsdelivr.net/npm/@tsparticles/engine@3.1.0/+esm";
	import { loadAll } from "https://cdn.jsdelivr.net/npm/@tsparticles/all@3.1.0/+esm";
	import paticlesConfig from "../components/configs/particles-config";

	async function loadParticles(options: Record<string, any>) {
		await loadAll(tsParticles);

		await tsParticles.load({ id: "tsparticles", options });
	}

	loadParticles(paticlesConfig);
</script>

<Layout title="K4N - Studios">
	<main class="flex flex-col gap-y-12">
		<Wrapper client:load />

		<section class="flex flex-col gap-y-10">
			{Array.from(Array(2).keys()).map((_, i: number) => (
				<InformationSection
					title={texts.titles[i]}
					body={texts.bodies[i]}
					imageDirection={i % 2 == 0 ? "right" as string : "left" as string}
				/>
			))}
		</section>

		<Whoareus />
		<ContactUs />
	</main>
</Layout>

<style global>
	main {
		margin: auto;
		padding: 1rem;
		width: 1000px;
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}

	#tsparticles {
		z-index: -1 !important;
	}

	/* .astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(
			rgba(var(--accent-dark), 66%),
			rgba(var(--accent-dark), 33%)
		);
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
	} */
</style>
